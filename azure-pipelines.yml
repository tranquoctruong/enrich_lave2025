trigger:
  branches:
    include:
      - master
      - main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfig: 'Release'

steps:
# C√†i .NET SDK
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x'

# Kh√¥i ph·ª•c package
- task: DotNetCoreCLI@2
  displayName: 'Restore IdentityService'
  inputs:
    command: 'restore'
    projects: '**/IdentityService.API.csproj'

# Build
- task: DotNetCoreCLI@2
  displayName: 'Build IdentityService'
  inputs:
    command: 'build'
    projects: '**/IdentityService.API.csproj'
    arguments: '--configuration $(buildConfig)'

# Publish
- task: DotNetCoreCLI@2
  displayName: 'Publish IdentityService'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/IdentityService.API.csproj'
    arguments: '--configuration $(buildConfig) --output $(Build.ArtifactStagingDirectory)/identity-service'
    zipAfterPublish: false

# üîë L·∫•y secret t·ª´ Key Vault
- task: AzureKeyVault@2
  displayName: 'Get secrets from Key Vault'
  inputs:
    azureSubscription: 'azure-fullstack-conn' # üëà thay t√™n service connection th·∫≠t
    KeyVaultName: 'truongfullstack-kv'
    SecretsFilter: 'AuthDBConnectionString'
    RunAsPreJob: true

# üîÅ Thay th·∫ø {{AuthDBConnectionString}} trong appsettings.json
- task: FileTransform@1
  displayName: 'Replace appsettings placeholders'
  inputs:
    folderPath: '$(Build.ArtifactStagingDirectory)/identity-service'
    fileType: 'json'
    targetFiles: '**/appsettings*.json'

# Publish th∆∞ m·ª•c (not zip)
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: identity-service'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/identity-service'
    ArtifactName: 'identity-service'
    publishLocation: 'Container'
